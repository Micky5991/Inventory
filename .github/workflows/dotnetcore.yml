name: .NET Core

on:

  push:
    branches:
      - '*'
      - '!gh-pages'
    tags:
      - '*.*.*'

  pull_request:
    branches:
      - '*'
      - '!gh-pages'


jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201

    - name: Set general reference
      id: vars
      run: |
        echo ::set-output name=ref::${GITHUB_REF#refs/*/}
        echo ::set-output name=is_tag::${{ startsWith(github.ref, 'refs/tags/') }}

    - name: Install dependencies
      run: dotnet restore

    - name: Install .NET Core tools
      working-directory: ./Inventory.Tests/
      run: dotnet tool restore

    - name: Build
      if: steps.vars.outputs.is_tag == 'false'
      run: dotnet build --configuration Release --no-restore

    - name: Build with version ${{ steps.vars.outputs.ref }}
      if: steps.vars.outputs.is_tag == 'true'
      run: dotnet build --configuration Release --no-restore -p:Version=${{ steps.vars.outputs.ref }} -p:PackageVersion=${{ steps.vars.outputs.ref }}

    - name: Test
      run: dotnet test --verbosity normal

    - name: Run Mutation Tests
      working-directory: ./Inventory.Tests/
      run: dotnet stryker

    - name: Save NuGet artifact
      if: success() && steps.vars.outputs.is_tag == 'true' && matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2-preview
      with:
        name: nuget-package
        path: Inventory/bin/Release/Micky5991.Inventory.${{ steps.vars.outputs.ref }}.nupkg

    - name: Create Release
      if: success() && steps.vars.outputs.is_tag == 'true' && matrix.os == 'ubuntu-latest'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: V${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload Release Asset
      if: success() && steps.vars.outputs.is_tag == 'true' && matrix.os == 'ubuntu-latest'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Inventory/bin/Release/Micky5991.Inventory.${{ steps.vars.outputs.ref }}.nupkg
        asset_name: Micky5991.Inventory.${{ steps.vars.outputs.ref }}.nupkg
        asset_content_type: application/zip
